/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { PointsSystem, PointsSystemInterface } from "../PointsSystem";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "member",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "MemberRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "member",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PointsAssigned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "member",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PointsEarned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PointsTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "member",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum PointsSystem.RewardType",
        name: "reward",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
    ],
    name: "RewardClaimed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "admins",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "assignAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "memberAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "assignPoints",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "earnPoints",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "members",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "points",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isRegistered",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum PointsSystem.RewardType",
        name: "reward",
        type: "uint8",
      },
    ],
    name: "redeemReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "memberName",
        type: "string",
      },
    ],
    name: "registerMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferPoints",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002b67eb89ee26ead5c81e60c01b6100fd60201b60201c565b610045679fc76bb1c33b05b860c01b6100fd60201b60201c565b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100a0675e07d3346cd5947a60c01b6100fd60201b60201c565b6001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610100565b50565b6120238061010f6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063859323451161006657806385932345146101325780638da5cb5b1461014e578063a5871d911461016c578063c76d3a5414610188578063e2194c23146101a457610093565b806308ae4b0c14610098578063326f823f146100ca5780633da7d2ed146100e6578063429b62e514610102575b600080fd5b6100b260048036038101906100ad91906114a4565b6101c0565b6040516100c193929190611595565b60405180910390f35b6100e460048036038101906100df91906115ff565b61027f565b005b61010060048036038101906100fb91906114a4565b6106dc565b005b61011c600480360381019061011791906114a4565b61083f565b604051610129919061163f565b60405180910390f35b61014c6004803603810190610147919061165a565b61085f565b005b610156610a86565b6040516101639190611696565b60405180910390f35b610186600480360381019061018191906117e6565b610aac565b005b6101a2600480360381019061019d91906115ff565b610ccc565b005b6101be60048036038101906101b99190611854565b610fe7565b005b60006020528060005260406000206000915090508060000180546101e3906118b0565b80601f016020809104026020016040519081016040528092919081815260200182805461020f906118b0565b801561025c5780601f106102315761010080835404028352916020019161025c565b820191906000526020600020905b81548152906001019060200180831161023f57829003601f168201915b5050505050908060010154908060020160009054906101000a900460ff16905083565b610293679b7a399b2c91cc7960c01b61142f565b6102a767c3f228fd11afe96660c01b61142f565b6102bb67d8908875c4a9bada60c01b61142f565b6102cf67ff3cfffdae6db4e360c01b61142f565b6102e3675d3109836fd550ad60c01b61142f565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16610371576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103689061192d565b60405180910390fd5b61038567c32136ff77b253dd60c01b61142f565b6103996745951802a9f8c9ec60c01b61142f565b6103ad670efa376d6b103fea60c01b61142f565b6103c167ed8a34c32100006f60c01b61142f565b6103d567eec43639f5c5912860c01b61142f565b6103e96740d18253f2636c8a60c01b61142f565b6103fd67aa350a76dd142d1960c01b61142f565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1661048b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048290611999565b60405180910390fd5b61049f678f2a4749ac3d782960c01b61142f565b6104b367a836b373732b7a0860c01b61142f565b6104c767f945fd23f9a8c43360c01b61142f565b6104db67dc8635905eb2907960c01b61142f565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154101561055f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055690611a05565b60405180910390fd5b61057367ca8292d40813ef7d60c01b61142f565b61058767cf329d9db04a0ac760c01b61142f565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546105d89190611a54565b925050819055506105f36754c0171fe6b95a9b60c01b61142f565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546106449190611a88565b9250508190555061065f673319d20015cf067360c01b61142f565b610673672096669a2d76750160c01b61142f565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8368079d4813055221156198c714ea6a6742cfcec7c979383b0085e1cc738dc0836040516106d09190611abc565b60405180910390a35050565b6106f0672019ce53abedf1d760c01b61142f565b6107046790f55b92689203a460c01b61142f565b61071867fafaaf01c7bee42a60c01b61142f565b61072c6762ba58428067e15160c01b61142f565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b390611b23565b60405180910390fd5b6107d0674f2189668dffb74860c01b61142f565b6107e4671b2bbb66e9d1d17860c01b61142f565b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60026020528060005260406000206000915054906101000a900460ff1681565b61087367f198f920c98a49ff60c01b61142f565b61088767c3f228fd11afe96660c01b61142f565b61089b67d8908875c4a9bada60c01b61142f565b6108af67ff3cfffdae6db4e360c01b61142f565b6108c3675d3109836fd550ad60c01b61142f565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16610951576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109489061192d565b60405180910390fd5b61096567c32136ff77b253dd60c01b61142f565b6109796745951802a9f8c9ec60c01b61142f565b61098d67ceec3970f59002b360c01b61142f565b6109a167754cbb6a4e3b438e60c01b61142f565b6109b567976792523cc068ab60c01b61142f565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254610a069190611a88565b92505081905550610a2167edd3bb528aa38b3960c01b61142f565b610a35674743e8a8697151b860c01b61142f565b3373ffffffffffffffffffffffffffffffffffffffff167f2c4c0dc427a50c4a69d2fc184c47a311acf950d8d2f289fbaee64e83e9b2896782604051610a7b9190611abc565b60405180910390a250565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610ac067a8d05f18588f597e60c01b61142f565b610ad467cd9bb1703cb8167160c01b61142f565b610ae867f4ca30fac12df10e60c01b61142f565b610afc67996867eaed2572c460c01b61142f565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1615610b8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8290611b8f565b60405180910390fd5b610b9f67e4e700d34e2cfd8e60c01b61142f565b610bb367d3110a65b3f3b2f960c01b61142f565b604051806060016040528082815260200160008152602001600115158152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019081610c259190611d5b565b506020820151816001015560408201518160020160006101000a81548160ff021916908315150217905550905050610c6767563111133171e74060c01b61142f565b610c7b67ad8e52aadd4e06d360c01b61142f565b3373ffffffffffffffffffffffffffffffffffffffff167f3b09349069a59bcde8c2609afc86c80b77c81085ac8cd8662981621f7ea3574b82604051610cc19190611e2d565b60405180910390a250565b610ce0673dd41966dae005f060c01b61142f565b610cf4672823c570e990b2fa60c01b61142f565b610d0867dd15aab46148c6a560c01b61142f565b610d1c67dde8a34dfb70603860c01b61142f565b610d3067b1d760e50b87f9fe60c01b61142f565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610dbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db390611ec1565b60405180910390fd5b610dd067a21ee66444bd6d3660c01b61142f565b610de467963a7aedc184874560c01b61142f565b610df8679ac6a4e3b4e2f52f60c01b61142f565b610e0c672116731c8e348eb660c01b61142f565b610e20679b8cf09295cdad2960c01b61142f565b610e3467bc426d90f6163c7d60c01b61142f565b610e4867f5d7ff2ee3ae3a7a60c01b61142f565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16610ed6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ecd90611f2d565b60405180910390fd5b610eea67e61483c8987ebca460c01b61142f565b610efe670e2e1353466ee89560c01b61142f565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254610f4f9190611a88565b92505081905550610f6a6788540ee627548b1060c01b61142f565b610f7e679cdee22e447323ab60c01b61142f565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fef51063ccec35fa3405cd72b0717f0be32328d57fd599637939010e0c8dc0cdb83604051610fdb9190611abc565b60405180910390a35050565b610ffb670c9d19dfb956a7cd60c01b61142f565b61100f67c3f228fd11afe96660c01b61142f565b61102367d8908875c4a9bada60c01b61142f565b61103767ff3cfffdae6db4e360c01b61142f565b61104b675d3109836fd550ad60c01b61142f565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff166110d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d09061192d565b60405180910390fd5b6110ed67c32136ff77b253dd60c01b61142f565b6111016745951802a9f8c9ec60c01b61142f565b6111156742ba6cee61c03ba860c01b61142f565b6111296787d8b5824627a74860c01b61142f565b61113d67200caadd33b57e3e60c01b61142f565b6111516715713874963121ba60c01b61142f565b60006111676744f074bc0dc0121b60c01b61142f565b61117b674383a94a6efc730960c01b61142f565b6000600181111561118f5761118e611f4d565b5b8260018111156111a2576111a1611f4d565b5b036111d8576111bb67ab3f6b016c6de85360c01b61142f565b6111cf67ec063ce964e372cd60c01b61142f565b60649050611273565b6111ec6728f9490b070adccc60c01b61142f565b61120067b61f33cfc537556060c01b61142f565b60018081111561121357611212611f4d565b5b82600181111561122657611225611f4d565b5b0361125d5761123f676439903e05ef002760c01b61142f565b61125367b938de14d0128d3160c01b61142f565b6101f49050611272565b6112716748693c723c1033a560c01b61142f565b5b5b61128767501d5e3ee8a03b4360c01b61142f565b61129b6776ac6790439ece1860c01b61142f565b6112af67bdea5d7a9f7e2de360c01b61142f565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101541015611333576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161132a90611a05565b60405180910390fd5b61134767457b57f13fd4de1460c01b61142f565b61135b67b9a1fd7e071387a060c01b61142f565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546113ac9190611a54565b925050819055506113c76754e4cdfaf8994e8260c01b61142f565b6113db67411c8a9f825566bd60c01b61142f565b3373ffffffffffffffffffffffffffffffffffffffff167f889047e3a24dbcfa359bc1ed9fefeae51ca3d0e7ec4bc9db63eec5e3095493da8383604051611423929190611fc4565b60405180910390a25050565b50565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061147182611446565b9050919050565b61148181611466565b811461148c57600080fd5b50565b60008135905061149e81611478565b92915050565b6000602082840312156114ba576114b961143c565b5b60006114c88482850161148f565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561150b5780820151818401526020810190506114f0565b60008484015250505050565b6000601f19601f8301169050919050565b6000611533826114d1565b61153d81856114dc565b935061154d8185602086016114ed565b61155681611517565b840191505092915050565b6000819050919050565b61157481611561565b82525050565b60008115159050919050565b61158f8161157a565b82525050565b600060608201905081810360008301526115af8186611528565b90506115be602083018561156b565b6115cb6040830184611586565b949350505050565b6115dc81611561565b81146115e757600080fd5b50565b6000813590506115f9816115d3565b92915050565b600080604083850312156116165761161561143c565b5b60006116248582860161148f565b9250506020611635858286016115ea565b9150509250929050565b60006020820190506116546000830184611586565b92915050565b6000602082840312156116705761166f61143c565b5b600061167e848285016115ea565b91505092915050565b61169081611466565b82525050565b60006020820190506116ab6000830184611687565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6116f382611517565b810181811067ffffffffffffffff82111715611712576117116116bb565b5b80604052505050565b6000611725611432565b905061173182826116ea565b919050565b600067ffffffffffffffff821115611751576117506116bb565b5b61175a82611517565b9050602081019050919050565b82818337600083830152505050565b600061178961178484611736565b61171b565b9050828152602081018484840111156117a5576117a46116b6565b5b6117b0848285611767565b509392505050565b600082601f8301126117cd576117cc6116b1565b5b81356117dd848260208601611776565b91505092915050565b6000602082840312156117fc576117fb61143c565b5b600082013567ffffffffffffffff81111561181a57611819611441565b5b611826848285016117b8565b91505092915050565b6002811061183c57600080fd5b50565b60008135905061184e8161182f565b92915050565b60006020828403121561186a5761186961143c565b5b60006118788482850161183f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806118c857607f821691505b6020821081036118db576118da611881565b5b50919050565b7f596f75206d75737420626520612072656769737465726564206d656d62657200600082015250565b6000611917601f836114dc565b9150611922826118e1565b602082019050919050565b600060208201905081810360008301526119468161190a565b9050919050565b7f546172676574206d7573742062652072656769737465726564206d656d626572600082015250565b60006119836020836114dc565b915061198e8261194d565b602082019050919050565b600060208201905081810360008301526119b281611976565b9050919050565b7f596f7520646f6e2774206861766520656e6f75676820706f696e747300000000600082015250565b60006119ef601c836114dc565b91506119fa826119b9565b602082019050919050565b60006020820190508181036000830152611a1e816119e2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a5f82611561565b9150611a6a83611561565b9250828203905081811115611a8257611a81611a25565b5b92915050565b6000611a9382611561565b9150611a9e83611561565b9250828201905080821115611ab657611ab5611a25565b5b92915050565b6000602082019050611ad1600083018461156b565b92915050565b7f4f6e6c79206f776e65722063616e2061737369676e2061646d696e7300000000600082015250565b6000611b0d601c836114dc565b9150611b1882611ad7565b602082019050919050565b60006020820190508181036000830152611b3c81611b00565b9050919050565b7f416c72656164792072656769737465726564206173206d656d62657200000000600082015250565b6000611b79601c836114dc565b9150611b8482611b43565b602082019050919050565b60006020820190508181036000830152611ba881611b6c565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611c117fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611bd4565b611c1b8683611bd4565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611c58611c53611c4e84611561565b611c33565b611561565b9050919050565b6000819050919050565b611c7283611c3d565b611c86611c7e82611c5f565b848454611be1565b825550505050565b600090565b611c9b611c8e565b611ca6818484611c69565b505050565b5b81811015611cca57611cbf600082611c93565b600181019050611cac565b5050565b601f821115611d0f57611ce081611baf565b611ce984611bc4565b81016020851015611cf8578190505b611d0c611d0485611bc4565b830182611cab565b50505b505050565b600082821c905092915050565b6000611d3260001984600802611d14565b1980831691505092915050565b6000611d4b8383611d21565b9150826002028217905092915050565b611d64826114d1565b67ffffffffffffffff811115611d7d57611d7c6116bb565b5b611d8782546118b0565b611d92828285611cce565b600060209050601f831160018114611dc55760008415611db3578287015190505b611dbd8582611d3f565b865550611e25565b601f198416611dd386611baf565b60005b82811015611dfb57848901518255600182019150602085019450602081019050611dd6565b86831015611e185784890151611e14601f891682611d21565b8355505b6001600288020188555050505b505050505050565b60006020820190508181036000830152611e478184611528565b905092915050565b7f4f6e6c792061646d696e732063616e2063616c6c20746869732066756e63746960008201527f6f6e000000000000000000000000000000000000000000000000000000000000602082015250565b6000611eab6022836114dc565b9150611eb682611e4f565b604082019050919050565b60006020820190508181036000830152611eda81611e9e565b9050919050565b7f4d656d626572206e6f7420726567697374657265640000000000000000000000600082015250565b6000611f176015836114dc565b9150611f2282611ee1565b602082019050919050565b60006020820190508181036000830152611f4681611f0a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110611f8d57611f8c611f4d565b5b50565b6000819050611f9e82611f7c565b919050565b6000611fae82611f90565b9050919050565b611fbe81611fa3565b82525050565b6000604082019050611fd96000830185611fb5565b611fe6602083018461156b565b939250505056fea2646970667358221220a7c969eef370786593b2b12cf3adced2b7ceba62f41119dd77b4667526b4b60964736f6c634300081e0033";

type PointsSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PointsSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PointsSystem__factory extends ContractFactory {
  constructor(...args: PointsSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PointsSystem & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PointsSystem__factory {
    return super.connect(runner) as PointsSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PointsSystemInterface {
    return new Interface(_abi) as PointsSystemInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PointsSystem {
    return new Contract(address, _abi, runner) as unknown as PointsSystem;
  }
}
